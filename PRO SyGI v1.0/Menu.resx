<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_gestionIncidencias.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA0xJREFUeF7t3DFOMkEYh3FCYwkHgYICDwINBZWW3ICKe3gBEw9Aoxego/IKwAVI
        SIQvQ3bJrt/Ouuabl29n/s+TvInBibuZ+aGYoJ0LSQcA8QAgHgDEA4B4ABAPAOIBQDwAiAcA8QAgHgDE
        A4B4ABAPAOIBQDwAiAcA8QAgHgDEA4B4ABAPAOIBQDwAiAcA8QAgHgDEA4B4ABAPAOIBQDwAiBcdgOfn
        50un07nbjMfj7MppFg2A3W5XeUD3mMfHx+wu0isaAFUHc89JFUEUAIrf9ufzefaobdPptATATYoIogBQ
        PIR7VQXATWoIAOCpCOB8PpfuISUEAPBUBOBKFQEAPH0H4EoRAQA8VQFwpYYAAJ58AFwpIQCApzoArlQQ
        AMDTTwBcKSAAgKcmAFyxIwCApyIA93HdTCaT0j3GhAAAntzBFq/72/n4+Mi+UrsDgKfNZlO67m/n7e0t
        +0rtDgCBA4BBALALAIEDgEEAsAsAgQOAQQCwCwCBA4BBALALAIEDgEEAsAsAgQOAQU0AvLy8lNZZTl35
        GgAErMnmL5fL0jrLqStfA4CANd389/f368Zbzul0yq5WHQAMagqgDQHAIADYBYDAAcAgANgFgMABwCAA
        2AWAwAHAoKYAnp6e/nrPfuhx7xauCwAGNQHgDr+4znLqytcAIGBNNv9f38ffdB4eHrIrVpevA0DAigfQ
        9gBgEADsAkDgAGAQAOwCQOAAYBAA7AJA4ABgEADsSgbA4XAorbOawWCQXbG6fB0AAlY8AF+z2ay0znLq
        ytcAIGBNNv/r6+vS7/dLay1mtVplV6wuXweAgBUPoO0BwCAA2AWAwAHAIADYBYDAAcCgWADs9/vbfa7X
        6+zRdhcFgF6vd9vYn/427382HA5v9+l+LY2hKABst9vbxrp5fX29/pfutuSe+cXD73a72WfaXxQAXKPR
        qISgzXM8HrO7bn/RAHAtFovKDW/LuGd+TIfvigpA3ufn5/VVdlvGveCL5Wf+96IEQOECgHgAEA8A4gFA
        PACIBwDxACAeAMQDgHgAEA8A4gFAPACIBwDxACAeAMQDgHgAEA8A4gFAPACIBwDxACAeAMQDgHgAEA8A
        4gFAPACIBwDxACAeAKS7XP4A/KUCO6g3WkcAAAAASUVORK5CYII=
</value>
  </data>
</root>